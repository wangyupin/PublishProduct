// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace POVWebDomain.Models.DB.POVWeb
{
    /// <summary>
    /// 用戶/群組
    /// </summary>
    public partial class TsUsers
    {
        public TsUsers()
        {
            InverseParentUser = new HashSet<TsUsers>();
            TsUserRight = new HashSet<TsUserRight>();
        }

        /// <summary>
        /// 父用戶編號
        /// </summary>
        public Guid? ParentUserID { get; set; }
        /// <summary>
        /// 用戶編號
        /// </summary>
        [Key]
        public Guid UserID { get; set; }
        /// <summary>
        /// 用戶代號
        /// </summary>
        [Required]
        [StringLength(20)]
        public string UserCode { get; set; }
        /// <summary>
        /// 用戶名稱
        /// </summary>
        [Required]
        [StringLength(50)]
        public string UserName { get; set; }
        /// <summary>
        /// 員工編號
        /// </summary>
        public Guid? EmpID { get; set; }
        /// <summary>
        /// 密碼
        /// </summary>
        [StringLength(50)]
        public string Password { get; set; }
        /// <summary>
        /// 說明
        /// </summary>
        [Required]
        [StringLength(500)]
        public string Description { get; set; }
        /// <summary>
        /// 活動識別
        /// </summary>
        [Required]
        public bool? IsActive { get; set; }
        /// <summary>
        /// 删除識別
        /// </summary>
        public bool DelFlag { get; set; }
        /// <summary>
        /// 异動日期
        /// </summary>
        [Column(TypeName = "datetime")]
        public DateTime ChangeDate { get; set; }
        /// <summary>
        /// 异動人員
        /// </summary>
        public Guid? ChangeUserID { get; set; }

        [ForeignKey(nameof(ParentUserID))]
        [InverseProperty(nameof(TsUsers.InverseParentUser))]
        public virtual TsUsers ParentUser { get; set; }
        [InverseProperty(nameof(TsUsers.ParentUser))]
        public virtual ICollection<TsUsers> InverseParentUser { get; set; }
        [InverseProperty("User")]
        public virtual ICollection<TsUserRight> TsUserRight { get; set; }
    }
}